# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
     - name: Vite Github Pages Deployer
       # You may pin to the exact commit or the version.
       # uses: skywarth/vite-github-pages-deployer@894ef807567d82fa238bd3d47009bd360910e11a
       uses: skywarth/vite-github-pages-deployer@v1.4.0
       #with:
         # Public base path string for vite, this affects the routing, history and asset links. Make sure to provide appropriately since Github Pages stores your app in a directory under a subdomain.
         #public_base_path: # optional, default is 
         # Which folder do you want your Github Page to use as root directory. Usually it is your build output directory such as ./dist 
         #build_path: # optional, default is ./dist
         # Node env that will be used for the installation of dependencies. It is imperative you use an environment that has 'vite' as dependency. Commonly, that is 'dev'.
         #install_phase_node_env: # optional, default is dev
         # Node env that will be used for build phase.
         #build_phase_node_env: # optional, default is production
         # Your preference of package manager: 'npm' and 'yarn' are possible values.
         #package_manager: # optional, default is npm
         # Desired name for the Deployment environment. It is also the exposed artifact name which contains the build output (dist).
         #artifact_name: # optional, default is github-pages
         # Controls the debug mode, boolean, true is for on. When turned on, it'll output certain information on certain steps. Mainly used for development, but use it as you please to inspect your env and variables.
         #debug_mode: # optional, default is false
          
